user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 基础优化配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # GZIP压缩
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # API服务器负载均衡
    upstream api_servers {
        least_conn;  # 最少连接数负载均衡算法
        server api1:4000 max_fails=3 fail_timeout=30s;
        server api2:4000 max_fails=3 fail_timeout=30s;
        server api3:4000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Jitsi Meet服务器负载均衡
    upstream jitsi_servers {
        ip_hash;  # 基于IP的会话保持
        server jitsi1:8443;
        server jitsi2:8443;
        server jitsi3:8443;
    }

    # Matrix服务器负载均衡
    upstream matrix_servers {
        least_conn;
        server matrix1:8008;
        server matrix2:8008;
        server matrix3:8008;
    }

    # Web应用服务器
    server {
        listen 80;
        listen [::]:80;
        server_name wepal.example.com;
        
        # HTTP重定向到HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS服务器
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name wepal.example.com;

        ssl_certificate /etc/nginx/ssl/wepal.crt;
        ssl_certificate_key /etc/nginx/ssl/wepal.key;

        # 安全头部
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";

        # API代理
        location /api/ {
            proxy_pass http://api_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            # 限流设置
            limit_req zone=api burst=20 nodelay;
        }

        # Jitsi Meet代理
        location /jitsi/ {
            proxy_pass https://jitsi_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Matrix代理
        location /_matrix/ {
            proxy_pass http://matrix_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 静态文件服务
        location /static/ {
            root /var/www/wepal;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # 健康检查端点
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
}

# TCP负载均衡配置
stream {
    upstream jitsi_video {
        server jitsi1:10000;
        server jitsi2:10000;
        server jitsi3:10000;
    }

    server {
        listen 10000 udp;
        proxy_pass jitsi_video;
    }
}
